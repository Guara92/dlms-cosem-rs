[package]
name = "dlms_cosem"
version = "0.3.0"
edition = "2024"
rust-version = "1.85.1"
authors = ["Markus Reiter <me@reitermark.us>"]
license = "MIT OR Apache-2.0"
readme = "README.md"
description = "A `no_std` library for parsing DLMS/COSEM messages."
documentation = "https://docs.rs/dlms_cosem"
repository = "https://github.com/reitermarkus/dlms-cosem-rs"
homepage = "https://github.com/reitermarkus/dlms-cosem-rs"

[dependencies]
aes = "0.8"
aes-gcm = "0.10"
cipher = "0.4"
chrono = { version = "0.4", default-features = false, features = ["clock"], optional = true }
jiff = { version = "0.1", default-features = false, features = ["alloc"], optional = true }
derive-try-from-primitive = "1"
mbusparse = { version = "0.1", default-features = false, optional = true }
hdlcparse = { version = "2", default-features = false, optional = true }
nom = { version = "8", default-features = false, features = ["alloc"], optional = true }
serde = { version = "1", default-features = false, features = ["derive"], optional = true }

[features]
default = ["std", "parse", "mbusparse", "hdlcparse"]
std = ["serde?/std", "nom?/std", "chrono?/std", "jiff?/std"]
parse = ["dep:nom"]  # Enable parsing/deserialization functionality (decoding DLMS messages)
encode = []  # Enable encoding/serialization functionality (building DLMS messages)
association = []  # Enable Association Layer (AARQ/AARE/RLRQ/RLRE)
chrono-conversions = ["chrono"]  # Enable chrono interoperability (from_chrono methods work in no_std, now() requires std)
jiff-conversions = ["jiff"]  # Enable jiff interoperability (from_jiff methods work in no_std, now_jiff() requires std)
